services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - composer_data:/tmp/composer
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    working_dir: /var/www/html
    environment:
      COMPOSER_HOME: /tmp/composer

  composer:
    image: composer:2
    volumes:
      - .:/var/www/html
      - composer_data:/tmp/composer
    working_dir: /var/www/html
    environment:
      COMPOSER_HOME: /tmp/composer
    depends_on:
      - php

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

volumes:
  postgres_data:
  composer_data:
  redis_data:
