services:
  php:
    image: php:8.2-apache
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - composer_data:/tmp/composer  # Кэш Composer
    depends_on:
      mysql:
        condition: service_healthy  # Ждём, пока MySQL не станет доступен
    working_dir: /var/www/html
    command: >
      bash -c "docker-php-entrypoint apache2-foreground"
    environment:
      COMPOSER_HOME: /tmp/composer  # Указываем, где хранить кэш Composer

  # Composer как отдельный сервис (удобно для запуска composer install/update)
  composer:
    image: composer:2
    volumes:
      - .:/var/www/html
      - composer_data:/tmp/composer
    working_dir: /var/www/html
    environment:
      COMPOSER_HOME: /tmp/composer
    depends_on:
      - php  # Зависит от PHP (но не обязательно)

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3309:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      mysql:
        condition: service_healthy  # Ждём готовности MySQL
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}

volumes:
  mysql_data:
  composer_data:  # Том для кэша Composer